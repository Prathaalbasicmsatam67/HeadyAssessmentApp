apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

configurations {
    ktlint
}
android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools
    defaultConfig {
        applicationId "com.pratham.headytest"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            minifyEnabled false
            buildConfigField "String", "BASE_URL", '"https://stark-spire-93433.herokuapp.com/"'
        }
        release {
            minifyEnabled false
            buildConfigField "String", "BASE_URL", '"https://stark-spire-93433.herokuapp.com/"'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation deps.support.app_compat
    implementation deps.constraint_layout
    implementation deps.kotlin.stdlib
    implementation deps.support.androidx_appcompat
    implementation deps.support.android_ktx
    implementation deps.lifecycle.extensions
    implementation deps.support.google_material


    //koltin checkstyle
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    ktlint deps.ktlint

    // Retrofit
    implementation deps.retrofit.runtime
    implementation deps.retrofit.gson
    implementation deps.retrofit.adapter_rxjava2
    implementation deps.okhttp.logger

    // RxJava & RxAndroid
    implementation deps.rxjava2
    implementation deps.rx_android
    implementation deps.rx_kotlin

    // Dagger
    implementation deps.dagger.runtime
    implementation deps.dagger.android_support
    implementation deps.dagger.android
    annotationProcessor deps.dagger.compiler
    annotationProcessor deps.dagger.android_support_compiler
    kapt deps.dagger.compiler
    kapt deps.dagger.android_support_compiler

    //picasso
    implementation deps.picasso
    //testing

    //junit
    testImplementation deps.junit

    //mockito
    testImplementation deps.mockito.core
    testImplementation deps.mockito.inline
    testImplementation deps.mockito.kotlin
    //roboelectric
    testImplementation deps.roboelectric


}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}
//preBuild.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}
